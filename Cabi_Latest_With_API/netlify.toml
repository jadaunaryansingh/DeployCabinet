[build]
  command = "npm run build:client"
  functions = "netlify/functions"
  publish = "dist/spa"

[build.environment]
  NODE_VERSION = "18"
  NPM_VERSION = "9"

[functions]
  external_node_modules = ["express", "firebase"]
  node_bundler = "esbuild"
  included_files = ["server/**/*"]

# API routes - redirect to serverless functions
[[redirects]]
  force = true
  from = "/api/*"
  status = 200
  to = "/.netlify/functions/api/:splat"

# Handle Firebase Auth redirects
[[redirects]]
  from = "/__/auth/handler"
  to = "/.netlify/functions/api/auth/handler"
  status = 200

# SPA fallback - handle all other routes by serving index.html
# This ensures React Router can handle client-side routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  force = true

# Additional redirects for common patterns
[[redirects]]
  from = "/dashboard/*"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/booking/*"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/community/*"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/developer-dashboard/*"
  to = "/index.html"
  status = 200

# Handle trailing slashes
[[redirects]]
  from = "/*/"
  to = "/:splat"
  status = 301

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.gstatic.com https://www.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://identitytoolkit.googleapis.com https://securetoken.googleapis.com https://firestore.googleapis.com https://www.googleapis.com; frame-src 'self' https://accounts.google.com;"

# Cache static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Cache images
[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.ico"
  [headers.values]
    Cache-Control = "public, max-age=31536000"
